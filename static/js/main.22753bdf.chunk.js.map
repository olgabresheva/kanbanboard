{"version":3,"sources":["TaskDeleteAlertConfirm.js","TaskCard.js","Column.js","TaskCreateForm.js","App.js","serviceWorker.js","index.js"],"names":["TaskDeleteAlertConfirm","props","deleteIcon","className","width","height","viewBox","fill","xmlns","d","fillRule","useState","show","setShow","handleClose","onClick","Modal","onHide","Body","Footer","Button","variant","onTaskDelete","task","id","TaskCard","leftBtn","rightBtn","upBtn","downBtn","editBtn","saveBtn","cancelBtn","taskEdit","setTaskEdit","priority","onChangePriority","direction","type","value","name","onChange","e","target","onSaveTask","status","onChangeStatus","Column","tasks","filter","el","map","key","TaskCreateForm","taskInput","setTaskInput","isActiveTaskCreateBtn","setIsActiveTaskCreateBtn","isOpenTaskForm","setIsOpenTaskForm","htmlFor","length","preventDefault","onTaskCreate","disabled","uuidv4","App","initialtasks","setTasks","states","updatedTasks","indexOf","tasksPriorityEdit","taskListAfterDelete","editedTaskList","href","console","log","addedTaskList","push","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.22753bdf.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\n\nfunction TaskDeleteAlertConfirm(props) {\n\n    const deleteIcon = (<svg className=\"bi bi-trash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                             xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n        <path fillRule=\"evenodd\"\n              d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n    </svg>);\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <div>\n\n        <span className=\"float-left\"\n              onClick={handleShow}>{deleteIcon}</span>\n\n            <>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Body>Please confirm if you wish to delete this task?</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary btn-sm\" onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary btn-sm\" onClick={() => props.onTaskDelete(props.task.id)}>\n                            Confirm\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        </div>\n\n    );\n}\n\nexport default TaskDeleteAlertConfirm;\n","import React, {useState} from 'react';\nimport TaskDeleteAlertConfirm from \"./TaskDeleteAlertConfirm\";\n\nfunction TaskCard(props) {\n\n    const leftBtn = (\n        <svg className=\"bi bi-arrow-left-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n             xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n            <path fillRule=\"evenodd\"\n                  d=\"M8.354 11.354a.5.5 0 0 0 0-.708L5.707 8l2.647-2.646a.5.5 0 1 0-.708-.708l-3 3a.5.5 0 0 0 0 .708l3 3a.5.5 0 0 0 .708 0z\"/>\n            <path fillRule=\"evenodd\" d=\"M11.5 8a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5z\"/>\n        </svg>);\n\n    const rightBtn = (\n        <svg className=\"bi bi-arrow-right-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n             xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n            <path fillRule=\"evenodd\"\n                  d=\"M7.646 11.354a.5.5 0 0 1 0-.708L10.293 8 7.646 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0z\"/>\n            <path fillRule=\"evenodd\" d=\"M4.5 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5z\"/>\n        </svg>);\n\n    const upBtn = (<svg className=\"bi bi-chevron-up\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\"\n              d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/>\n    </svg>);\n\n    const downBtn = (\n        <svg className=\"bi bi-chevron-down\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n             xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\"\n                  d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n        </svg>);\n\n    const editBtn = (<svg className=\"bi bi-pencil\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                          xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\"\n              d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"/>\n        <path fillRule=\"evenodd\"\n              d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"/>\n    </svg>);\n\n    const saveBtn = (\n        <svg className=\"bi bi-check2-all\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n             xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\"\n                  d=\"M12.354 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\"/>\n            <path\n                d=\"M6.25 8.043l-.896-.897a.5.5 0 1 0-.708.708l.897.896.707-.707zm1 2.414l.896.897a.5.5 0 0 0 .708 0l7-7a.5.5 0 0 0-.708-.708L8.5 10.293l-.543-.543-.707.707z\"/>\n        </svg>\n    );\n\n    const cancelBtn = (<svg className=\"bi bi-x\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                            xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n        <path fillRule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n    </svg>);\n\n    const [taskEdit, setTaskEdit] = useState([]);\n\n    const taskNameEditer = (task) => {\n        setTaskEdit(task);\n    }\n\n    const onTaskEditChange = (e) => {\n        setTaskEdit({...taskEdit, name: e.target.value});\n    }\n\n    const saveTask = () => {\n        props.onSaveTask(taskEdit);\n        setTaskEdit([]);\n    }\n\n    const editCancel = () => {\n        setTaskEdit([]);\n    }\n\n    return (\n        <div>\n            <div className=\"card\">\n                <div className=\"clearfix card-header sm-transparent\">\n                    {props.task.priority !== 'Low' &&\n                    <span className=\"text-left\"\n                          onClick={() => props.onChangePriority({id: props.task.id, direction: 'down'})}\n                    >{downBtn}</span>}\n                    <span> </span>\n                    <span>P: {props.task.priority}</span>\n                    <span> </span>\n                    {props.task.priority !== 'High' &&\n                    <span onClick={() => props.onChangePriority({id: props.task.id, direction: 'up'})}\n                    >{upBtn}</span>}\n                </div>\n\n                <div className=\"card-body\">\n                    {taskEdit.id === props.task.id\n                        ? <>\n                            <input type=\"text\" value={taskEdit.name} onChange={onTaskEditChange}/><br/>\n                            <button className=\"btn btn-outline-primary btn-sm\" onClick={saveTask}>{saveBtn}</button>\n                            <button className=\"btn btn-outline-dark btn-sm\"\n                                    onClick={editCancel}>{cancelBtn}</button>\n                        </>\n                        : <div>{props.task.name}</div>\n                    }\n                    <p/>\n                    <div className=\"clearfix\">\n                        <TaskDeleteAlertConfirm onTaskDelete={props.onTaskDelete}\n                                                task={props.task}/>\n                        <span className=\"float-left\" onClick={() => taskNameEditer(props.task)}>{editBtn}</span>\n\n                        {props.task.status !== 'Done' &&\n                        <span className=\"float-right\"\n                              onClick={() => props.onChangeStatus({id: props.task.id, direction: 'right'})}>\n                            {rightBtn}</span>}\n                        {props.task.status !== 'To Do' &&\n                        <span className=\"float-right\" onClick={() => props.onChangeStatus({\n                            id: props.task.id, direction: 'left'\n                        })}>{leftBtn}</span>}\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default TaskCard;\n","import React from 'react';\nimport TaskCard from \"./TaskCard\";\n\nfunction Column(props) {\n\n    return (\n        <div>\n            {props.tasks\n                .filter(el => el.status === props.status)\n                .map(el => <p key={el.id}><TaskCard key={el.id} task={el} onChangeStatus={props.onChangeStatus}\n                                        onTaskDelete={props.onTaskDelete}\n                                        onChangePriority={props.onChangePriority}\n                                        onSaveTask={props.onSaveTask}\n                /></p>)\n            }\n        </div>\n    );\n}\n\nexport default Column;\n","import React, {useState} from 'react';\n\nfunction TaskCreateForm(props) {\n\n    const [taskInput, setTaskInput] = useState('');\n    const [isActiveTaskCreateBtn, setIsActiveTaskCreateBtn] = useState(true);\n\n\n    const onInputChange = (e) => {\n        (setIsActiveTaskCreateBtn(e.target.value.length < 4));\n        setTaskInput(e.target.value);\n    }\n\n    const [isOpenTaskForm, setIsOpenTaskForm] = useState(false);\n\n    const onClickCreateTask = () => {\n        setIsOpenTaskForm(true);\n    }\n\n    const onCreateTaskCancel = () => {\n        setIsOpenTaskForm(false);\n        setTaskInput('');\n        setIsActiveTaskCreateBtn(false);\n        setIsOpenTaskForm(false);\n    }\n\n    const taskCreate = (e) => {\n        e.preventDefault();\n        props.onTaskCreate(taskInput);\n        setTaskInput('');\n        setIsOpenTaskForm(false);\n    }\n\n    return (\n        <div>\n\n            {!isOpenTaskForm &&\n            <button type=\"button\" className=\"btn btn-primary\" onClick={onClickCreateTask}>Create Task</button>}\n\n            {isOpenTaskForm &&\n            <form>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputTask\">Task</label>\n                    <input type=\"task\" className=\"form-control\" value={taskInput}\n                           onChange={onInputChange}/>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\"\n                        onClick={taskCreate}\n                        disabled={isActiveTaskCreateBtn}>\n                    Submit\n                </button>\n                <button type=\"cancel\" className=\"btn btn-secondary\" onClick={onCreateTaskCancel}>Cancel</button>\n            </form>\n            }\n        </div>\n\n    );\n}\n\nexport default TaskCreateForm;\n","import React, {useState} from 'react';\nimport Column from './Column';\nimport {v4 as uuidv4} from 'uuid';\nimport TaskCreateForm from \"./TaskCreateForm\";\n\nuuidv4(); // ⇨ '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'\nfunction App() {\n\n    const initialtasks = [\n        {\n            id: uuidv4(),\n            name: 'task 1: study!',\n            priority: 'High',\n            status: 'To Do'\n        },\n        {\n            id: uuidv4(),\n            name: 'task 2: study more!',\n            priority: 'Low',\n            status: 'To Do'\n        },\n        {\n            id: uuidv4(),\n            name: 'task 3: test',\n            priority: 'Medium',\n            status: 'In Progress'\n        },\n        {\n            id: uuidv4(),\n            name: 'task 4: read documentation',\n            priority: 'High',\n            status: 'Done'\n        },\n        {\n            id: uuidv4(),\n            name: 'task 5: practice',\n            priority: 'Medium',\n            status: 'In Review'\n        },\n    ]\n\n    const [tasks, setTasks] = useState(initialtasks);\n\n    const states = ['To Do', 'In Progress', 'In Review', 'Done'];\n\n    const priority = ['High', 'Medium', 'Low'];\n\n    const onChangeStatus = ({id, direction}) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === id) {\n                if (direction === 'left') {\n                    el.status = states[states.indexOf(el.status) - 1];\n                }\n                if (direction === 'right') {\n                    el.status = states[states.indexOf(el.status) + 1];\n                }\n                return el\n            } else return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const onChangePriority = ({id, direction}) => {\n        // console.log({id, direction})\n        const tasksPriorityEdit = tasks.map(el => {\n            if (el.id === id) {\n                if (direction === 'up') {\n                    el.priority = priority[priority.indexOf(el.priority) - 1];\n                }\n                if (direction === 'down') {\n                    el.priority = priority[priority.indexOf(el.priority) + 1];\n                }\n                return el\n            } else return el;\n        });\n        setTasks(tasksPriorityEdit);\n    };\n\n    const onTaskDelete = (id) => {\n        const taskListAfterDelete = tasks.filter(el => el.id !== id);\n        setTasks(taskListAfterDelete);\n    }\n\n    const onTaskCreate = (taskInput) => {\n        console.log(taskInput);\n        const addedTaskList = [...tasks];\n        addedTaskList.push({id: uuidv4(), name: taskInput, priority: 'High', status: states[0]});\n        setTasks(addedTaskList);\n    }\n\n    const onSaveTask = (task) => {\n        const editedTaskList = tasks.map(el => {\n            if (task.id === el.id) return {...el, name: task.name}\n            else return el\n        })\n        setTasks(editedTaskList);\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <a href=\"https://github.com/olgabresheva/kanbanboard\"> <h2>Kanban</h2></a>\n                <TaskCreateForm onTaskCreate={onTaskCreate}/>\n                <p/>\n\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                            <h6>To Do</h6>\n                        </nav>\n                        <p/>\n                        <Column tasks={tasks} status='To Do' onChangeStatus={onChangeStatus}\n                                onTaskDelete={onTaskDelete}\n                                onChangePriority={onChangePriority}\n                                onSaveTask={onSaveTask}/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                            <h6>In Progress</h6>\n                        </nav>\n                        <p/>\n                        <Column tasks={tasks} status='In Progress' onChangeStatus={onChangeStatus}\n                                onTaskDelete={onTaskDelete}\n                                onChangePriority={onChangePriority}\n                                onSaveTask={onSaveTask}/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                            <h6>In Review</h6>\n                        </nav>\n                        <p/>\n                        <Column tasks={tasks} status='In Review' onChangeStatus={onChangeStatus}\n                                onTaskDelete={onTaskDelete}\n                                onChangePriority={onChangePriority}\n                                onSaveTask={onSaveTask}/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                            <h6>Done</h6>\n                        </nav>\n                        <p/>\n                        <Column tasks={tasks} status='Done' onChangeStatus={onChangeStatus}\n                                onTaskDelete={onTaskDelete}\n                                onChangePriority={onChangePriority}\n                                onSaveTask={onSaveTask}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}